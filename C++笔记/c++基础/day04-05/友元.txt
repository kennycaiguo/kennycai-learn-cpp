所谓的友元函数或者友元类，这些函数和类不是本类的一部分，但是可以频繁的访问本类的数据成员。
友元的作用是提高了程序的运行效率，因为它减少了类型检查和安全性检查，节省了时间开销。但是它
破坏了类的封装性和隐藏性，使得非成员函数可以访问类的私有成员。
友元函数：
可以将一个全局函数声明为类的友元函数：在类的内部使用friend关键字后面加函数的声明；
也可以将另外一个类的一个成员函数声明为类的友元函数，格式如下：
假设有一个PointManager类，它有一个共有的方法double PointDistance(Point &p1, Point &p2);
我们可以在本类中做如下声明：
friend double PointManager::PointDistance(Point &p1, Point &p2);

友元类：
声明为类的友元类：在类中public：下面添加：friend class 友元类名
注意：将一个类声明为友元比将一个类的特定成员函数声明为友元安全，因为将类的成员函数声明为友元
会导致循环引用头文件。友元是单向的，在类A中就类B声明为友元，则B可以访问类A的私有成员。但是
如果类B没有将类A声明为友元，A是无法访问B的私有成员的。友元关系不会继承。也就是B不能访问A的子类。
友元没有传递性，如果B是A的友元，C是B的友元，但是C仍然不是A的友元。
不建议经常使用友元。